/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
type ErrorWithCode = Error & {
    code: number;
};
type MaybeErrorWithCode = ErrorWithCode | null | undefined;
/**
 * InvalidVaultSeed: 'Vault PDA is derived with invalid vault seed.'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidVaultSeedError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InsufficientDeposit: 'Insufficient deposit amount.'
 *
 * @category Errors
 * @category generated
 */
export declare class InsufficientDepositError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * LockupNotExpired: 'Lockup period has not expired.'
 *
 * @category Errors
 * @category generated
 */
export declare class LockupNotExpiredError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidMintAuthority: 'Invalid mint authority. Move mint authority of the receipt token to the vault PDA.'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidMintAuthorityError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidFreezeAuthority: 'Invalid freeze authority. Move freeze authority of the receipt token to the vault PDA, or remove it completely.'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidFreezeAuthorityError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * NonZeroReceiptSupply: 'Supply of the receipt token has to be 0. Pre-minting is not allowed.'
 *
 * @category Errors
 * @category generated
 */
export declare class NonZeroReceiptSupplyError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 * @category generated
 */
export declare function errorFromCode(code: number): MaybeErrorWithCode;
/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 * @category generated
 */
export declare function errorFromName(name: string): MaybeErrorWithCode;
export {};
