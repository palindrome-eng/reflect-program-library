/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
/**
 * @category Instructions
 * @category Deposit
 * @category generated
 */
export type DepositInstructionArgs = {
    amount: beet.bignum;
    vaultId: beet.bignum;
};
/**
 * @category Instructions
 * @category Deposit
 * @category generated
 */
export declare const depositStruct: beet.BeetArgsStruct<DepositInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _deposit_ instruction
 *
 * @property [_writable_, **signer**] user
 * @property [_writable_] vault
 * @property [_writable_] depositTokenAccount
 * @property [_writable_] receiptTokenAccount
 * @property [_writable_] rewardPool
 * @property [_writable_] depositPool
 * @property [_writable_] receiptTokenMint
 * @category Instructions
 * @category Deposit
 * @category generated
 */
export type DepositInstructionAccounts = {
    user: web3.PublicKey;
    vault: web3.PublicKey;
    depositTokenAccount: web3.PublicKey;
    receiptTokenAccount: web3.PublicKey;
    rewardPool: web3.PublicKey;
    depositPool: web3.PublicKey;
    receiptTokenMint: web3.PublicKey;
    tokenProgram?: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const depositInstructionDiscriminator: number[];
/**
 * Creates a _Deposit_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category Deposit
 * @category generated
 */
export declare function createDepositInstruction(accounts: DepositInstructionAccounts, args: DepositInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
