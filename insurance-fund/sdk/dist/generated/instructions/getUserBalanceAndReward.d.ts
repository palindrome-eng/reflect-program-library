/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { GetUserBalanceAndRewardArgs } from '../types/GetUserBalanceAndRewardArgs';
/**
 * @category Instructions
 * @category GetUserBalanceAndReward
 * @category generated
 */
export type GetUserBalanceAndRewardInstructionArgs = {
    args: GetUserBalanceAndRewardArgs;
};
/**
 * @category Instructions
 * @category GetUserBalanceAndReward
 * @category generated
 */
export declare const getUserBalanceAndRewardStruct: beet.FixableBeetArgsStruct<GetUserBalanceAndRewardInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _getUserBalanceAndReward_ instruction
 *
 * @property [_writable_, **signer**] user
 * @property [_writable_] settings
 * @property [_writable_] lockup
 * @property [_writable_] receiptTokenMint
 * @property [_writable_] deposit
 * @property [_writable_] depositReceiptTokenAccount
 * @property [_writable_] cooldown
 * @property [_writable_] rewardBoost (optional)
 * @property [_writable_] asset
 * @property [_writable_] assetMint
 * @property [_writable_] rewardMint
 * @property [_writable_] lockupHotVault
 * @property [_writable_] lockupColdVault
 * @property [_writable_] assetRewardPool
 * @property [_writable_] lockupCooldownVault
 * @category Instructions
 * @category GetUserBalanceAndReward
 * @category generated
 */
export type GetUserBalanceAndRewardInstructionAccounts = {
    user: web3.PublicKey;
    settings: web3.PublicKey;
    lockup: web3.PublicKey;
    receiptTokenMint: web3.PublicKey;
    deposit: web3.PublicKey;
    depositReceiptTokenAccount: web3.PublicKey;
    cooldown: web3.PublicKey;
    rewardBoost?: web3.PublicKey;
    asset: web3.PublicKey;
    assetMint: web3.PublicKey;
    rewardMint: web3.PublicKey;
    lockupHotVault: web3.PublicKey;
    lockupColdVault: web3.PublicKey;
    assetRewardPool: web3.PublicKey;
    lockupCooldownVault: web3.PublicKey;
    tokenProgram?: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const getUserBalanceAndRewardInstructionDiscriminator: number[];
/**
 * Creates a _GetUserBalanceAndReward_ instruction.
 *
 * Optional accounts that are not provided default to the program ID since
 * this was indicated in the IDL from which this instruction was generated.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category GetUserBalanceAndReward
 * @category generated
 */
export declare function createGetUserBalanceAndRewardInstruction(accounts: GetUserBalanceAndRewardInstructionAccounts, args: GetUserBalanceAndRewardInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
