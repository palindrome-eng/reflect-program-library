/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { DepositRewardsArgs } from '../types/DepositRewardsArgs';
/**
 * @category Instructions
 * @category DepositRewards
 * @category generated
 */
export type DepositRewardsInstructionArgs = {
    args: DepositRewardsArgs;
};
/**
 * @category Instructions
 * @category DepositRewards
 * @category generated
 */
export declare const depositRewardsStruct: beet.BeetArgsStruct<DepositRewardsInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _depositRewards_ instruction
 *
 * @property [_writable_, **signer**] caller
 * @property [_writable_] settings
 * @property [_writable_] lockup
 * @property [_writable_] rewardMint
 * @property [_writable_] callerRewardAta
 * @property [_writable_] assetRewardPool
 * @property [_writable_] receiptTokenMint
 * @property [_writable_] lockupCooldownVault
 * @category Instructions
 * @category DepositRewards
 * @category generated
 */
export type DepositRewardsInstructionAccounts = {
    caller: web3.PublicKey;
    settings: web3.PublicKey;
    lockup: web3.PublicKey;
    rewardMint: web3.PublicKey;
    callerRewardAta: web3.PublicKey;
    assetRewardPool: web3.PublicKey;
    receiptTokenMint: web3.PublicKey;
    lockupCooldownVault: web3.PublicKey;
    tokenProgram?: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const depositRewardsInstructionDiscriminator: number[];
/**
 * Creates a _DepositRewards_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category DepositRewards
 * @category generated
 */
export declare function createDepositRewardsInstruction(accounts: DepositRewardsInstructionAccounts, args: DepositRewardsInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
