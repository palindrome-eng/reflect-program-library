{
  "version": "0.1.0",
  "name": "rlp",
  "constants": [
    {
      "name": "SETTINGS_SEED",
      "type": "string",
      "value": "\"settings\""
    },
    {
      "name": "DEPOSIT_SEED",
      "type": "string",
      "value": "\"deposit\""
    },
    {
      "name": "SLASH_SEED",
      "type": "string",
      "value": "\"slash\""
    },
    {
      "name": "ASSET_SEED",
      "type": "string",
      "value": "\"asset\""
    },
    {
      "name": "REWARD_BOOST_SEED",
      "type": "string",
      "value": "\"reward_boost\""
    },
    {
      "name": "REWARD_POOL_SEED",
      "type": "string",
      "value": "\"reward_pool\""
    },
    {
      "name": "PRICE_PRECISION",
      "type": "i32",
      "value": "9"
    },
    {
      "name": "INTENT_SEED",
      "type": "string",
      "value": "\"intent\""
    },
    {
      "name": "COOLDOWN_SEED",
      "type": "string",
      "value": "\"cooldown\""
    },
    {
      "name": "COOLDOWN_VAULT_SEED",
      "type": "string",
      "value": "\"cooldown_vault\""
    },
    {
      "name": "PERMISSIONS_SEED",
      "type": "string",
      "value": "\"permissions\""
    },
    {
      "name": "DEPOSIT_RECEIPT_VAULT_SEED",
      "type": "string",
      "value": "\"deposit_receipt_vault\""
    },
    {
      "name": "LIQUIDITY_POOL_SEED",
      "type": "string",
      "value": "\"liquidity_pool\""
    },
    {
      "name": "LIQUIDITY_POOL_LOCKUP_SEED",
      "type": "string",
      "value": "\"lp_lockup\""
    },
    {
      "name": "ORACLE_MAXIMUM_AGE",
      "type": "u64",
      "value": "60 * 60"
    }
  ],
  "instructions": [
    {
      "name": "initializeRlp",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "permissions",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "InitializeRlpArgs"
          }
        }
      ]
    },
    {
      "name": "initializeLp",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "permissions",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "liquidityPool",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "lpTokenMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "InitializeLiquidityPoolArgs"
          }
        }
      ]
    },
    {
      "name": "addAsset",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "admin",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "asset",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "assetMint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "oracle",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "depositRewards",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "permissions",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "liquidityPool",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "signerAssetTokenAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "assetMint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "asset",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetPool",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "DepositRewardsArgs"
          }
        }
      ]
    },
    {
      "name": "freezeFunctionality",
      "accounts": [
        {
          "name": "admin",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "adminPermissions",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "FreezeProtocolActionArgs"
          }
        }
      ]
    },
    {
      "name": "updateDepositCap",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "admin",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "UpdateDepositCapArgs"
          }
        }
      ]
    },
    {
      "name": "slash",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "permissions",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "liquidityPool",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "mint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "asset",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "liquidityPoolTokenAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "destination",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "SlashArgs"
          }
        }
      ]
    },
    {
      "name": "restake",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "permissions",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "liquidityPool",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "lpToken",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userLpAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "asset",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetMint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "userAssetAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "poolAssetAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "oracle",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "RestakeArgs"
          }
        }
      ]
    },
    {
      "name": "requestWithdrawal",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "permissions",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "liquidityPool",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "lpTokenMint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "signerLpTokenAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cooldown",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cooldownLpTokenAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "RequestWithdrawalArgs"
          }
        }
      ]
    },
    {
      "name": "withdraw",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "permissions",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "liquidityPool",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "lpTokenMint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cooldownLpTokenAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "cooldown",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "WithdrawArgs"
          }
        }
      ]
    },
    {
      "name": "swapLp",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "admin",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "settings",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "liquidityPool",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenFrom",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenFromAsset",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenFromOracle",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenTo",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenToAsset",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenToOracle",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenFromPool",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenToPool",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenFromSignerAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenToSignerAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "SwapLpArgs"
          }
        }
      ]
    },
    {
      "name": "createPermissionAccount",
      "accounts": [
        {
          "name": "settings",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "newCreds",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "caller",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "newAdmin",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "updateActionRole",
      "accounts": [
        {
          "name": "admin",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "adminPermissions",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "UpdateActionRoleArgs"
          }
        }
      ]
    },
    {
      "name": "updateRoleHolder",
      "accounts": [
        {
          "name": "admin",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "settings",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "adminPermissions",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "updateAdminPermissions",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "strategy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "UpdateRoleHolderArgs"
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Asset",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mint",
            "type": "publicKey"
          },
          {
            "name": "oracle",
            "type": {
              "defined": "Oracle"
            }
          }
        ]
      }
    },
    {
      "name": "Cooldown",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "type": "publicKey"
          },
          {
            "name": "liquidityPoolId",
            "type": "u8"
          },
          {
            "name": "unlockTs",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "LiquidityPool",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "index",
            "type": "u8"
          },
          {
            "name": "lpToken",
            "type": "publicKey"
          },
          {
            "name": "cooldowns",
            "type": "u64"
          },
          {
            "name": "cooldownDuration",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "UserPermissions",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "docs": [
              "Bump for PDA derivation."
            ],
            "type": "u8"
          },
          {
            "name": "authority",
            "docs": [
              "Account authority - the entity that can modify this permission set."
            ],
            "type": "publicKey"
          },
          {
            "name": "protocolRoles",
            "docs": [
              "Protocol-level roles - permissions that apply across the entire protocol."
            ],
            "type": {
              "defined": "LevelRoles"
            }
          }
        ]
      }
    },
    {
      "name": "Settings",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "liquidityPools",
            "type": "u8"
          },
          {
            "name": "assets",
            "type": "u8"
          },
          {
            "name": "frozen",
            "type": "bool"
          },
          {
            "name": "accessControl",
            "type": {
              "defined": "AccessControl"
            }
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "UpdateActionRoleArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "action",
            "type": {
              "defined": "Action"
            }
          },
          {
            "name": "role",
            "type": {
              "defined": "Role"
            }
          },
          {
            "name": "update",
            "type": {
              "defined": "Update"
            }
          }
        ]
      }
    },
    {
      "name": "FreezeProtocolActionArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "action",
            "type": {
              "defined": "Action"
            }
          },
          {
            "name": "freeze",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "InitializeLpTokenAccountArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "liquidityPoolIndex",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "InitializeLiquidityPoolArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "cooldownDuration",
            "type": "u64"
          },
          {
            "name": "cooldowns",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "InitializeRlpArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "cooldownDuration",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "UpdateRoleHolderArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "address",
            "type": "publicKey"
          },
          {
            "name": "role",
            "type": {
              "defined": "Role"
            }
          },
          {
            "name": "update",
            "type": {
              "defined": "Update"
            }
          }
        ]
      }
    },
    {
      "name": "UpdateDepositCapArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "lockupId",
            "type": "u64"
          },
          {
            "name": "newCap",
            "type": {
              "option": "u64"
            }
          }
        ]
      }
    },
    {
      "name": "DepositRewardsArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "SlashArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "liquidityPoolId",
            "type": "u8"
          },
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "SwapLpArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "amountIn",
            "type": "u64"
          },
          {
            "name": "minOut",
            "type": {
              "option": "u64"
            }
          }
        ]
      }
    },
    {
      "name": "RequestWithdrawalArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "liquidityPoolId",
            "type": "u8"
          },
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "RestakeArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "liquidityPoolIndex",
            "type": "u8"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "minLpTokens",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "WithdrawArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "liquidityPoolId",
            "type": "u8"
          },
          {
            "name": "cooldownId",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "ActionMapping",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "action",
            "type": {
              "defined": "Action"
            }
          },
          {
            "name": "allowedRoles",
            "type": {
              "array": [
                {
                  "defined": "Role"
                },
                18
              ]
            }
          },
          {
            "name": "roleCount",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "AccessMap",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "actionPermissions",
            "docs": [
              "Maps each regular action to its permissions."
            ],
            "type": {
              "array": [
                {
                  "defined": "ActionMapping"
                },
                18
              ]
            }
          },
          {
            "name": "mappingCount",
            "docs": [
              "Counter to track how many mappings are in use."
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "AccessControl",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "accessMap",
            "docs": [
              "Access map for this component."
            ],
            "type": {
              "defined": "AccessMap"
            }
          },
          {
            "name": "killswitch",
            "docs": [
              "State for freezing particular functionality."
            ],
            "type": {
              "defined": "KillSwitch"
            }
          }
        ]
      }
    },
    {
      "name": "KillSwitch",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "frozen",
            "docs": [
              "Bool indices:\n    - [0] - mint\n    - [1] - redeem\n    - [2] - rebalance\n    - [3] - capture (print and distribute stable)"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "LevelRoles",
      "docs": [
        "Handles role management at any hierarchy level (protocol or strategy) with methods for:\n- Checking if a specific role exists\n- Adding and removing roles\n- Checking if the SUPREMO role exists\n- Validating if roles can perform specific actions"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "roles",
            "type": {
              "vec": {
                "defined": "Role"
              }
            }
          }
        ]
      }
    },
    {
      "name": "Role",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "UNSET"
          },
          {
            "name": "PUBLIC"
          },
          {
            "name": "TESTEE"
          },
          {
            "name": "FREEZE"
          },
          {
            "name": "CRANK"
          },
          {
            "name": "MANAGER"
          },
          {
            "name": "SUPREMO"
          }
        ]
      }
    },
    {
      "name": "Action",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Restake"
          },
          {
            "name": "Withdraw"
          },
          {
            "name": "FreezeRestake"
          },
          {
            "name": "FreezeWithdraw"
          },
          {
            "name": "InitializeLiquidityPool"
          },
          {
            "name": "AddAsset"
          },
          {
            "name": "UpdateDepositCap"
          },
          {
            "name": "Slash"
          },
          {
            "name": "Swap"
          },
          {
            "name": "DepositRewards"
          },
          {
            "name": "Management"
          },
          {
            "name": "SuspendDeposits"
          },
          {
            "name": "FreezeProgram"
          },
          {
            "name": "UpdateRole"
          },
          {
            "name": "UpdateAction"
          }
        ]
      }
    },
    {
      "name": "Oracle",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Pyth",
            "fields": [
              "publicKey"
            ]
          },
          {
            "name": "Switchboard",
            "fields": [
              "publicKey"
            ]
          }
        ]
      }
    },
    {
      "name": "CooldownRewards",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Single",
            "fields": [
              "u64"
            ]
          },
          {
            "name": "Dual",
            "fields": [
              {
                "array": [
                  "u64",
                  2
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Update",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Add"
          },
          {
            "name": "Remove"
          }
        ]
      }
    }
  ],
  "events": [
    {
      "name": "RestakeEvent",
      "fields": [
        {
          "name": "from",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "asset",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "amount",
          "type": "u64",
          "index": false
        },
        {
          "name": "lockupTs",
          "type": "u64",
          "index": false
        }
      ]
    },
    {
      "name": "RequestWithdrawEvent",
      "fields": [
        {
          "name": "authority",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "liquidityPoolId",
          "type": "u8",
          "index": false
        },
        {
          "name": "amount",
          "type": "u64",
          "index": false
        }
      ]
    },
    {
      "name": "WithdrawEvent",
      "fields": [
        {
          "name": "from",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "asset",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "baseAmount",
          "type": "u64",
          "index": false
        },
        {
          "name": "rewardAmount",
          "type": "u64",
          "index": false
        }
      ]
    },
    {
      "name": "DepositRewardEvent",
      "fields": [
        {
          "name": "authority",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "asset",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "amount",
          "type": "u64",
          "index": false
        }
      ]
    },
    {
      "name": "AddAssetEvent",
      "fields": [
        {
          "name": "admin",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "asset",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "oracle",
          "type": "publicKey",
          "index": false
        }
      ]
    },
    {
      "name": "InitializeRlp",
      "fields": [
        {
          "name": "caller",
          "type": "publicKey",
          "index": false
        }
      ]
    },
    {
      "name": "InitializeLockupEvent",
      "fields": [
        {
          "name": "admin",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "lockup",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "asset",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "duration",
          "type": "u64",
          "index": false
        }
      ]
    },
    {
      "name": "ManageFreezeEvent",
      "fields": [
        {
          "name": "admin",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "frozen",
          "type": "bool",
          "index": false
        }
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidSigner",
      "msg": "InvalidSigner"
    },
    {
      "code": 6001,
      "name": "InvalidInput",
      "msg": "InvalidInput"
    },
    {
      "code": 6002,
      "name": "AssetNotWhitelisted",
      "msg": "AssetNotWhitelisted"
    },
    {
      "code": 6003,
      "name": "DepositTooLow",
      "msg": "DepositTooLow"
    },
    {
      "code": 6004,
      "name": "DepositCapOverflow",
      "msg": "DepositCapOverflow"
    },
    {
      "code": 6005,
      "name": "NotEnoughFunds",
      "msg": "NotEnoughFunds"
    },
    {
      "code": 6006,
      "name": "NotEnoughReceiptTokens",
      "msg": "NotEnoughReceiptTokens"
    },
    {
      "code": 6007,
      "name": "NotEnoughFundsToSlash",
      "msg": "NotEnoughFundsToSlash"
    },
    {
      "code": 6008,
      "name": "DepositsLocked",
      "msg": "DepositsLocked"
    },
    {
      "code": 6009,
      "name": "DepositsOpen",
      "msg": "DepositsOpen"
    },
    {
      "code": 6010,
      "name": "DepositsNotSlashed",
      "msg": "DepositsNotSlashed"
    },
    {
      "code": 6011,
      "name": "AllDepositsSlashed",
      "msg": "AllDepositsSlashed"
    },
    {
      "code": 6012,
      "name": "SlashAmountMismatch",
      "msg": "SlashAmountMismatch"
    },
    {
      "code": 6013,
      "name": "ShareConfigOverflow",
      "msg": "ShareConfigOverflow"
    },
    {
      "code": 6014,
      "name": "Frozen",
      "msg": "Frozen"
    },
    {
      "code": 6015,
      "name": "InvalidOracle",
      "msg": "InvalidOracle"
    },
    {
      "code": 6016,
      "name": "MathOverflow",
      "msg": "MathOverflow"
    },
    {
      "code": 6017,
      "name": "LockupInForce",
      "msg": "LockupInForce"
    },
    {
      "code": 6018,
      "name": "BoostNotApplied",
      "msg": "BoostNotApplied"
    },
    {
      "code": 6019,
      "name": "InvalidSigners",
      "msg": "InvalidSigners"
    },
    {
      "code": 6020,
      "name": "TransferSignatureRequired",
      "msg": "TransferSignatureRequired"
    },
    {
      "code": 6021,
      "name": "ColdWalletNotSlashed",
      "msg": "ColdWalletNotSlashed"
    },
    {
      "code": 6022,
      "name": "PermissionsTooLow",
      "msg": "PermissionsTooLow"
    },
    {
      "code": 6023,
      "name": "WithdrawalThresholdOverflow",
      "msg": "WithdrawalThresholdOverflow"
    },
    {
      "code": 6024,
      "name": "PoolImbalance",
      "msg": "PoolImbalance"
    },
    {
      "code": 6025,
      "name": "InvalidReceiptTokenSetup",
      "msg": "InvalidReceiptTokenSetup"
    },
    {
      "code": 6026,
      "name": "InvalidReceiptTokenDecimals",
      "msg": "InvalidReceiptTokenDecimals"
    },
    {
      "code": 6027,
      "name": "InvalidReceiptTokenMintAuthority",
      "msg": "InvalidReceiptTokenMintAuthority"
    },
    {
      "code": 6028,
      "name": "InvalidReceiptTokenSupply",
      "msg": "InvalidReceiptTokenSupply"
    },
    {
      "code": 6029,
      "name": "InvalidReceiptTokenFreezeAuthority",
      "msg": "InvalidReceiptTokenFreezeAuthority"
    },
    {
      "code": 6030,
      "name": "MinimumSuperadminsRequired",
      "msg": "MinimumSuperadminsRequired"
    },
    {
      "code": 6031,
      "name": "IntentValueTooLow",
      "msg": "IntentValueTooLow"
    },
    {
      "code": 6032,
      "name": "WithdrawalNeedsIntent",
      "msg": "WithdrawalNeedsIntent"
    },
    {
      "code": 6033,
      "name": "PriceError",
      "msg": "PriceError"
    },
    {
      "code": 6034,
      "name": "CooldownInForce",
      "msg": "CooldownInForce"
    },
    {
      "code": 6035,
      "name": "SlippageExceeded",
      "msg": "SlippageExceeded"
    },
    {
      "code": 6036,
      "name": "InvalidTokenOrder",
      "msg": "InvalidTokenOrder"
    },
    {
      "code": 6037,
      "name": "ActionFrozen",
      "msg": "ActionFrozen"
    },
    {
      "code": 6038,
      "name": "ActionNotFound",
      "msg": "ActionNotFound"
    },
    {
      "code": 6039,
      "name": "NoEntriesLeft",
      "msg": "NoEntriesLeft"
    },
    {
      "code": 6040,
      "name": "RoleNotUnderAction",
      "msg": "RoleNotUnderAction"
    },
    {
      "code": 6041,
      "name": "ActionHasAssignedRole",
      "msg": "ActionHasAssignedRole"
    },
    {
      "code": 6042,
      "name": "InvalidState",
      "msg": "InvalidState"
    },
    {
      "code": 6043,
      "name": "IncorrectAdmin",
      "msg": "IncorrectAdmin"
    },
    {
      "code": 6044,
      "name": "SameAdmin",
      "msg": "SameAdmin"
    },
    {
      "code": 6045,
      "name": "AlreadyFrozen",
      "msg": "AlreadyFrozen"
    },
    {
      "code": 6046,
      "name": "AlreadyUnfrozen",
      "msg": "AlreadyUnfrozen"
    }
  ],
  "metadata": {
    "address": "rhLMe6vyM1wVLJaxrWUckVmPxSia58nSWZRDtYQow6D",
    "origin": "anchor",
    "binaryVersion": "0.29.0",
    "libVersion": "0.29.0"
  }
}